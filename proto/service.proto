syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "options.proto";

package proto;
option go_package = ".;proto";

// The Main service definition.
service Service {
  /*
   * Returns general info about the financial instrument, such as a name, description,
   * a version, dependencies, etc.
   *
   * This also allows to subscribe to outputs from other MicroModels.
   * For example, let's assume you are writing a MicroModel, and
   * it returns the following subscriptions as part of the grpc API call:
   *
   * {
   *     "name": "My monthly phone bill"
   *     "input_filter": ["othermodel.net-income", "*.taxable-income"]
   *     ...
   * }
   *
   * What this does:
   *
   * - `othermodel` is the name of a particular version of a MicroModel. The
   *   controller will ensure that the micromodel will have access to the net-income
   *   stream of othermodel.
   *
   * - `*.taxable-income` is similar, except it subscribes to the `taxable-income`
   *   output of all MicroModels. This could for example be useful when building a tax
   *   MicroModel.
   */
  rpc GetInfo(ModelInfoRequest)
      returns (ModelInfo) {}

  /*
   * Returns the value development of the asset over the given range.
   * The asset value can also be negative, for example for a mortgage.
   */
  rpc GetValueFromDateRange(ModelRequest)
      returns (ModelResult) {}

  /*
   * Returns a list of financial transactions in the given range of days.
   * The input and output formats are the same as for the `/value/` API.
   */
  rpc GetIncomeFromDateRange(ModelRequest)
      returns (ModelResult) {}
}

message ModelInfoRequest {
}

message ModelRequest {
  Options options = 1;                     // Options are originally configured by a user
  ModelInput input = 2;                    // Input depends on what the model subscribed to; empty for simple requests
  google.protobuf.Timestamp from_date = 3; // The start of the subset of results to return
  google.protobuf.Timestamp to_date = 4;   // The end of the subset of results to return
}

// The input parameter definition.
message ModelInfo {
  string name = 1;                             // Model name
  string version = 2;                          // Model version
  string hname = 3;                            // Human readable name
  repeated string input_filter = 4;            // Will later be used to subscribe to input from other micromodels
  ReferencePeriod input_reference_period = 5;  // Used by other microservices to determine which time range to ask for
}

enum ReferencePeriod {
  DAY = 0;
  WEEK = 1;
  MONTH = 2;
  QUARTER = 3;
  BIANNUAL = 4;
  YEAR = 5;
}

message ModelInput {
  repeated PaymentStream streams = 1;
}

// The result definition.
enum IncomeStreamType {
  TAXABLE = 0;
  PRETAXABLE = 1;
  NET = 2;
  OTHER = 3;
}

message ModelResult {
  repeated PaymentStream streams = 1;
}

message PaymentStream {
  string id = 1;
  string source = 2;
  IncomeStreamType type = 3;
  repeated Payment payments = 4;
}

message Payment {
  google.protobuf.Timestamp date = 1;
  int64 amount = 2;
}
